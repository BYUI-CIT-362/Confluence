apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: confluence-prod
spec:
  serviceName: confluence-prod-loadbalancer
  replicas: 1
  selector:
    matchLabels:
      app: confluence-prod
  template:
    metadata:
      labels:
        app: confluence-prod
    spec:
      containers:
        - name: confluence-prod
          image: atlassian/confluence-server
          env:
            - name: JVM_MAXIMUM_MEMORY
              value: "5600m"
          ports:
            - containerPort: 443
          resources:
            limits:
              cpu: "2"
              memory: "6000Mi"
            requests:
              cpu: "2"
              memory: "4000Mi"
          volumeMounts:
            - name: confluence-data-prod
              mountPath: /var/atlassian/application-data/confluence
          livenessProbe: 
            httpGet:
              path: /login.action
              port: 8090
            periodSeconds: 300
            timeoutSeconds: 10
          readinessProbe: 
            httpGet:
              path: /login.action
              port: 8090
            initialDelaySeconds: 300
            periodSeconds: 10
            failureThreshold: 10          
            timeoutSeconds: 10
      volumes:
        - name: confluence-data-prod 
          gcePersistentDisk:
            pdName:  gke-cluster-1-e42b77e1-pvc-22097859-2ecf-42e4-ab99-f03116b16e63
            fsType: ext4                   
---
apiVersion: v1
kind: Service
metadata:
  name: confluence-prod-loadbalancer
spec:
  selector:
    app: confluence-prod
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8090
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: confluence-prod-certificate
spec:
  domains:
    - confluence.cit362.com
---    
apiVersion: v1
kind: Service
metadata:
  name: confluence-prod-clusterip
spec:
  selector:
    app: confluence-prod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8090
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: confluence-prod-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: confluence-public
    networking.gke.io/managed-certificates: confluence-prod-certificate
    cloud.google.com/backend-config: confluence-prod-ingress-backend-config
    networking.gke.io/v1beta1.FrontendConfig: confluence-prod-ingress-frontend-config
spec:
  backend:
    serviceName: confluence-prod-nodeport
    servicePort: 80      
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: confluence-prod-ingress-backend-config
spec:
# This overrides the default Ingress/Load Balancer Health Check
  healthCheck:
    checkIntervalSec: 10
    timeoutSec: 10
    healthyThreshold: 2
    unhealthyThreshold: 2
# The type is the protocol used to connect to the Pod
    type: HTTP
    requestPath: /login.action
# The below port is the port to use to connect to the Pod
    port: 80
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: confluence-prod-ingress-frontend-config
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: MOVED_PERMANENTLY_DEFAULT
---
apiVersion: v1
kind: Service
metadata:
  name: confluence-prod-nodeport
spec:
  selector:
    app: confluence-prod
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8090    
