apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: confluence-prod
spec:
  serviceName: confluence-prod-loadbalancer
  replicas: 1
  selector:
    matchLabels:
      app: confluence-prod
  template:
    metadata:
      labels:
        app: confluence-prod
    spec:
      containers:
      - name: confluence-prod
        image: atlassian/confluence-server
        env:
        - name: JVM_MAXIMUM_MEMORY
          value: "7000m"
        ports:
        - containerPort: 8090
        resources:
          limits:
            cpu: "2"
            memory: "8000Mi"
          requests:
            cpu: "2"
            memory: "8000Mi"
        volumeMounts:
        - name: confluence-data
          mountPath: /var/atlassian/application-data/confluence
        livenessProbe:
          httpGet:
            path: /
            port: 8090
          initialDelaySeconds: 300
          periodSeconds: 30
      volumes:
      - name: home
        persistentVolumeClaim:
          claimName: confluence-prod-home-claim       
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: confluence-prod-home
  labels:
    name: confluence-prod-home
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 25Gi
  nfs:
    server: 10.12.15.66 
    path: /confluence
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: confluence-prod-home-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 25Gi
  storageClassName: ""
  selector:
    matchLabels:
      name: "confluence-prod-home"
---
apiVersion: v1
kind: Service
metadata:
  name: confluence-prod-loadbalancer
spec:
  selector:
    app: confluence-prod
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8090  
---
apiVersion: v1
kind: Service
metadata:
  name: confluence-prod-nodeport
spec:
  selector:
    app: confluence-prod 
  type: NodePort
  ports:
    -  port: 80
       targetPort: 8090
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: confluence-prod-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: confluence-public
    networking.gke.io/managed-certificates: confluence-certificate
    kubernetes.io/ingress.allow-http: "false"
spec:
  backend:
    serviceName: confluence-prod-nodeport
    servicePort: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: confluence-certificate
spec:
  domains:
    -  confluence.cit326.com

